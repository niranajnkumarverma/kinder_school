"""
Django settings for school project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""


from pathlib import Path
import os
import smtplib
from firebase_admin import initialize_app
os.environ["GOOGLE_APPLICATION_CREDENTIALS"]="school-management-system-220d4-89bc3b7ea0f7.json"

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7rtz8#h!!#ef+zp6^z^2%a8g5%gh1l^tlegq%x0()kz-fvoda^'

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = True

ALLOWED_HOSTS = [ '*']

MESSAGE_STORAGE = "django.contrib.messages.storage.cookie.CookieStorage"
# Application definition

INSTALLED_APPS = [
    # 'channels',
    # 'chat',
    # 'django.contrib.sites',
    # 'cms',
    # 'menus',
    # 'treebeard',
    # 'sekizai',
    'newsApp.apps.NewsappConfig',
    'django.contrib.humanize',  ##### This is used for (1 minutes ago time) display on screen
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home',
    'student',
    'product',
    'order',
    'principal',
    'security',
    'teacher',
    'parent',
    'superadmin',
    'admin_portal',
    'crispy_forms',
    'social_django',
    'chatbot',
    'fcm_django',
    'colorfield',
    

       
    # 'usernotifier',
   
  
         
]
SITE_ID = 1

CRISPY_TEMPLATE_PACK = 'bootstrap4'
MESSAGE_TAGS = {
        10: 'alert-secondary',
        20: 'alert-info',
        25: 'alert-success',
        30: 'alert-warning',
        40: 'alert-danger',
 }

MIDDLEWARE = [
    'django_session_timeout.middleware.SessionTimeoutMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ## This middleware is used for user login with google account 
    'social_django.middleware.SocialAuthExceptionMiddleware',
    ## django session logout
    'django_auto_logout.middleware.auto_logout',
    # 'django.middleware.locale.LocaleMiddleware',
    # 'cms.middleware.user.CurrentUserMiddleware',
    # 'cms.middleware.page.CurrentPageMiddleware',
    # 'cms.middleware.toolbar.ToolbarMiddleware',
    # 'cms.middleware.language.LanguageCookieMiddleware',



   
]
AUTO_LOGOUT = {'SESSION_TIME': 15000}



AUTO_LOGOUT = {
    'SESSION_TIME': 15000,
    'MESSAGE': 'The session has expired. Please login again to continue.',
}

ROOT_URLCONF = 'school.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 'sekizai.context_processors.sekizai',
                # 'cms.context_processors.cms_settings',
                # 'django.template.context_processors.i18n',

                'social_django.context_processors.backends',   
                'social_django.context_processors.login_redirect',
                'django_auto_logout.context_processors.auto_logout_client',

              
            ],
        },
    },
]

WSGI_APPLICATION = 'school.wsgi.application'
ASGI_APPLICATION = 'school.asgi.application'


CHANNEL_LAYERS = {
    'default': {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        'CONFIG': {
            "hosts": [("localhost", 6379)],
        },
    },
}


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
    'ENGINE': 'django.db.backends.mysql',
    'NAME': 'school_db',
    'USER': 'root',
    'PASSWORD': 'sms@123',
    'HOST': 'localhost',
    'PORT': '3306',
},

}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
# LANGUAGES = [
#     ('en', 'English'),
#     ('de', 'German'),
# ]
TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

DATE_INPUT_FORMATS = ['%d-%m-%Y', '%Y-%m-%d']
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

################# This parts is used for cant login django admin pannel side

# AUTHENTICATION_BACKENDS = (
#     'django.contrib.auth.backends.RemoteUserBackend',
# )
################ end @#######################

ACCOUNT_LOGOUT_ON_GET = True


STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)


MEDIA_URL = '/uploads/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'uploads')


LOGIN_REDIRECT_URL = 'student:student_profile'
LOGOUT_REDIRECT_URL = '/'


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'home.User'  


## Stripe payment Integrations !!!!!!!!!!!!!!!!!!!!!##################################################

STRIPE_PUBLIC_KEY  = 'pk_test_51Kc2nkSA8HRMHYNa0tkcXDKVkg0cO6aWU8qiProc2tXLJoPnBZd1VZjVp6sALpGxrjcXhArn9GEDbLS7n83rx5pN004n26KDcB'
STRIPE_SECRET_KEY = 'sk_test_51Kc2nkSA8HRMHYNa7cjxMNqkgzSFL7mLZ9wEaGVoArtzLD9AS5pesjIxUsEK07DI93KX0oM4zxZxB9hRPlJLKq1600m4CyJYms'

## Paytm Integrations <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<############################################

# Payment configuration
PAYTM_MERCHANT_ID = 'POyPew32195302419864'
PAYTM_SECRET_KEY = 'gv_OgI5hgd6v3lUS'
PAYTM_WEBSITE = 'WEBSTAGING'
PAYTM_CHANNEL_ID = 'WEB'
PAYTM_INDUSTRY_TYPE_ID = 'Retail'


######## GOOGLE RECAPTCHA ###############
# GOOGLE_RECAPTCHA_SECRET_KEY = '6LdwBYUfAAAAAEaq-UYQSumqsWpEKy0p5wA32tLp'
# RECAPTCHA_PRIVATE_KEY = '6LdwBYUfAAAAAG7M5PkjrVmUG70bcZ6oBS6DJBxh'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.google.GoogleOAuth2',
     
)
########## GOOGLE  ######################
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '642158897272-0q044986uai7qjjrbu04fde53cfagimc.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'
########### FACEBOOK #######################
SOCIAL_AUTH_FACEBOOK_KEY = '985292215170699'
SOCIAL_AUTH_FACEBOOK_SECRET = '7b8483ff422109a7c17b3f7a03966bbf'
###########  TWITTER #######################
SOCIAL_AUTH_TWITTER_KEY = '9TD8f5fhasdsbf4w61GSM9' 
SOCIAL_AUTH_TWITTER_SECRET = 'mwtdcUe4uOvvjDk2Ausb45gsasdasdasashw65454TNSx'

#########################################################
# email configtaions
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_AUTH_ERROR = smtplib.SMTPAuthenticationError
EMAIL_HOST_USER = 'niranjankumar8578@gmail.com'
EMAIL_HOST_PASSWORD = 'ndkppqswvxnvvrrk'
EMAIL_PORT = 587


# Optional ONLY IF you have initialized a firebase app already:
# Visit https://firebase.google.com/docs/admin/setup/#python
# for more options for the following:
# Store an environment variable called GOOGLE_APPLICATION_CREDENTIALS
# which is a path that point to a json file with your credentials.
# Additional arguments are available: credentials, options, name
FIREBASE_APP = initialize_app()
# To learn more, visit the docs here:
# https://cloud.google.com/docs/authentication/getting-started>

FCM_DJANGO_SETTINGS = {
     # default: _('FCM Django')
    # "APP_VERBOSE_NAME": "[string for AppConfig's verbose_name]",
     # true if you want to have only one active device per registered user at a time
     # default: False
    "FCM_SERVER_KEY": "[AAAAZ2Md1PI:APA91bHK1w388Eu2uV0P7vriPCONcAmTAw-Set84YFDn7gUPCvEInWXGJuxCKTSOMGL_aA20wxyScd7x7L8WxteEqQPeV98mWHRdCg2LQjMFrCfpusGUwSuv8GqkpRCkfQ6KgqTMP4Hd]",
    "ONE_DEVICE_PER_USER": False,
     # devices to which notifications cannot be sent,
     # are deleted upon receiving error response from FCM
     # default: False
    "DELETE_INACTIVE_DEVICES": False,
}
